
dependencies {
    //compileOnly "net.kyori:adventure-api:4.12.0"
    compileOnly "net.kyori:adventure-text-serializer-plain:4.18.0"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.18.0"
    implementation "net.kyori:adventure-text-minimessage:4.18.0"

    implementation(project(path: ':MineStore-API'))

    implementation "com.google.guava:guava:31.1-jre"
    implementation 'com.zaxxer:HikariCP:4.0.3'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    implementation "com.mysql:mysql-connector-j:8.0.33"
    implementation "org.yaml:snakeyaml:2.2"

    compileOnly 'net.luckperms:api:5.4'
    implementation 'com.github.ChromMob:ConfigManager:master-SNAPSHOT'


    implementation("org.incendo:cloud-annotations:2.0.0-SNAPSHOT")
    compileOnly("org.incendo:cloud-core:2.0.0-SNAPSHOT")
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')

def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version,
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

compileJava.dependsOn generateTemplates

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })